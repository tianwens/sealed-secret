apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-spring
spec:
  selector:
    matchLabels:
      app: sample-spring
  template:
    metadata:
      labels:
        app: sample-spring
    spec:
      imagePullSecrets:
      - name: github-regcred
      containers:
      - name: sample-spring
        image: ghcr.io/lyzhang1999/sample-kotlin-spring:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http

        # kubernetes原始的env, ConfigMap, Secret 三方式配置管理方法之一的Secret：与下面的 volumes 段搭配，使用上k apply -f orig_method/deployment/image-pull-secret.yaml的
        volumeMounts:
        - name: pull-image-files  # 跟下面的volumes里的name对应
          mountPath: /docker-entrypoint-initdb.d

        # kubernetes原始的env, ConfigMap, Secret 三方式配置管理方法之一的env：使用上k apply -f orig_method/deployment/sample-secret.yaml中的: github-regcred
        env:
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: sample-secret

      volumes:
        - name: pull-image-files
          configMap:
            # 对应orig_method/deployment/image-pull-secret.yaml中的name: github-regcred
            name: github-regcred

---

apiVersion: v1
kind: Service
metadata:
  name: sample-spring
spec:
  type: ClusterIP
  selector:
    app: sample-spring
  ports:
  - port: 8080
    name: http